require('dotenv').config();
const { Bot, GrammyError, HttpError } = require('grammy')
const fs = require('fs');
const cron = require('node-cron');
require('dotenv').config();
console.log('BOT_API_KEY: ', process.env.BOT_API_KEY);
if (!process.env.BOT_API_KEY) {
    throw new Error("–¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
}

const bot = new Bot(process.env.BOT_API_KEY);

const userStates = {}; // { user: {day: 1, stage: 'rules', progress: {} }}

bot.api.setMyCommands([
    {
        command: 'start',
        description: '–°–¢–ê–†–¢',
    },
    {
        command: 'help',
        description: '–ò–ù–°–¢–†–£–ö–¶–ò–Ø',
    },
    {
        command: 'day1',
        description: '–ó–∞–¥–∞–Ω–∏—è 16.12',
    },
    {
        command: 'day2',
        description: '–ó–∞–¥–∞–Ω–∏—è 17.12',
    },
    {
        command: 'day3',
        description: '–ó–∞–¥–∞–Ω–∏—è 18.12',
    },
    {
        command: 'day4',
        description: '–ó–∞–¥–∞–Ω–∏—è 19.12',
    },
]);
// === –ú–æ–¥—É–ª—å –î–Ω—è 1 ===
const day1Questions = [
    { question: '–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?\n–ü—Ä–æ–≤–µ—Ä–∏–º —Å —Ç–æ–π –ª–∏ —è —Å–≤—è–∑–∞–ª—Å—è)', answer: '–º–∞—à–∞'}, 
    { question: '–¢–µ–ø–µ—Ä—å –≤–æ–ø—Ä–æ—Å –¥–ª—è —Ä–∞–∑–≥–æ–Ω–∞.\n–ö–∞–∫–∞—è –ø–ª–∞–Ω–µ—Ç–∞ —Å–∞–º–∞—è –±–æ–ª—å—à–∞—è –≤ –°–æ–ª–Ω–µ—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ?', answer: '—é–ø–∏—Ç–µ—Ä'}, 
    { question: '–ù–∞–∑–æ–≤–∏ —Å–≤–æ–π –ª—é–±–∏–º—ã–π –Ω–∞–ø–∏—Ç–æ–∫?', answer: '–∫–æ–ª–∞'}, 
    { question: '–ú–∞—à–∞, –ê—Ä–±—É–∑ –∏–ª–∏ –î—ã–Ω—è?', answer: '–¥—ã–Ω—è'}, 
    { question: '–¢–µ–ø–µ—Ä—å –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Å–ª–æ–∂–Ω–µ–µüßê:\n–ö–∞–∫ –∑–≤–∞–ª–∏ –º–∞–º—É –ú–∞–∫–µ–¥–æ–Ω—Å–∫–æ–≥–æ?', answer: '–æ–ª–∏–º–ø–∏–∞–¥–∞'},
    { question: '–ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä—è–º–∞—è –ª–∏–Ω–∏—è, —É –∫–æ—Ç–æ—Ä–æ–π –µ—Å—Ç—å –Ω–∞—á–∞–ª–æ, –Ω–æ –Ω–µ—Ç –∫–æ–Ω—Ü–∞?', answer: '–ª—É—á'},
    { question: '–°–∫–∞–∂–∏, –∞ —Å–∫–æ–ª—å–∫–æ —É —Ç–µ–±—è —Å–µ–π—á–∞—Å –ø–æ—Å—Ç–æ–≤ –≤ –∏–Ω—Å—Ç–µ?)', answer: '41'},
    { question: '–ê –∫–∞–∫–∞—è —Ç–≤–æ—è –ª—é–±–∏–º–∞—è –µ–¥–∞?)', answer: '—Ö–ª–µ–±'},
    { question: '–°–∫–æ–ª—å–∫–æ –ª–µ—Ç –¥–ª–∏–ª–∞—Å—å —Å—Ç–æ–ª–µ—Ç–Ω—è—è –≤–æ–π–Ω–∞?', answer: '116'},
    { question: '–ê –≤ –∫–∞–∫–æ–º –º–µ—Å—è—Ü–µ —É –Ω–∞—Å 28 –¥–Ω–µ–π?', answer: '–≤ –∫–∞–∂–¥–æ–º'},
    { question: '–ù–∞–∑–æ–≤–∏ —Å–æ–±–∞–∫—É, –≤ –ø–∞—Ä–æ–¥–µ –∫–æ—Ç–æ—Ä–æ–π –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –∑–≤—É–∫ –ø–∞–¥–µ–Ω–∏—è –∫–∞–ø–ª–∏...', answer: '–±—É–ª—å–¥–æ–≥'},
    { question: '–Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 10\n–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ)', answer: '9'},
    { question: '3 —è–π—Ü–∞ –≤–∞—Ä—è—Ç—Å—è –≤ –∫–∞—Å—Ç—Ä—é–ª–µ 9 –º–∏–Ω—É—Ç, —Å–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç –≤–∞—Ä–∏—Ç—å—Å—è –≤ —ç—Ç–æ–π –∂–µ –∫–∞—Å—Ç—Ä—é–ª–µ –æ–¥–Ω–æ —è–π—Ü–æ?(–Ω–∞–ø–∏—à–∏ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ)', answer: '9'},
    { question: '–£ –º–µ–Ω—è –µ—Å—Ç—å –∑—É–±—ã, –Ω–æ —è –Ω–µ –º–æ–≥—É –µ—Å—Ç—å. –ß—Ç–æ —è —Ç–∞–∫–æ–µ?', answer: '—Ä–∞—Å—á—ë—Å–∫–∞'},
    { question: '–ö–∞–∫ –Ω–∞–∑—ã–≤–∞—é—Ç—Å—è —Å–µ—Ä–µ–∂–∫–∏ –¥–ª—è –¥—É—Ä–∞–∫–∞?', answer: '–ª–∞–ø—à–∞'},
    { question: '–ö —Ç–µ–±–µ –ø—Ä–∏—à–ª–∏ –≥–æ—Å—Ç–∏. –ù–∞ —Å—Ç–æ–ª–µ —Å—Ç–æ–∏—Ç –±—É—Ç—ã–ª–∫–∞ –≤–∏–Ω–∞, —à–∞–º–ø–∞–Ω—Å–∫–æ–≥–æ, –º–∏–Ω–µ—Ä–∞–ª–∫–∞ –∏ –∫–æ—Ä–æ–±–∫–∞ –∫–æ–Ω—Ñ–µ—Ç. –ß—Ç–æ —Ç—ã –æ—Ç–∫—Ä–æ–µ—à—å –ø–µ—Ä–≤—ã–º –¥–µ–ª–æ–º?', answer: '–¥–≤–µ—Ä—å'},
];
const handleDay1 = async (ctx) => {
    const userId = ctx.from.id;

    if (!userStates[userId]) {
        userStates[userId] = { day: 1, stage: null, progress: { currentQuestionIndex: 0 }, completed: false };
    }

    const userState = userStates[userId];

    if (userState.stage === null) {
        userState.stage = "awaiting-code";
        userState.progress.currentQuestionIndex = 0;
        await ctx.reply('–í—Ä–æ–¥–µ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ —Ä–∞–∑–æ–±—Ä–∞–ª–∏—Å—å)\n\n' +
            '–ü–µ—Ä–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–µ:\n' +
            '–û—Ç–ø—Ä–∞–≤–ª—è–π—Å—è –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É –≤ –ú–µ—Ç—Ä–æ–§–∏—Ç–Ω–µ—Å—Å...\n\n' +
            '–ü–æ—Å–ª–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —Ç—ã –ø—Ä–∏–¥–µ—à—å –¥–æ–º–æ–π —É–∂–µ –Ω–µ —Å –ø—É—Å—Ç—ã–º–∏ —Ä—É–∫–∞–º–∏üòä\n' +
            '–í –∫–æ—Ä–æ–±–∫–µ –ª–µ–∂–∏—Ç –≤–µ—â—å, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–≥—Ä—É —Ç–µ–±–µ –Ω–∞–¥–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –º–µ–Ω—è –∫–æ–¥–æ–≤—ã–º —Å–ª–æ–≤–æ–º\n\n' +
            '–ö–∞–∫–æ–µ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ?\n\n' +
            '–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: ');
        return;
    }

    const userAnswer = ctx.message.text.trim().toLowerCase();

    if (userState.stage === "awaiting-code") {
        if (userAnswer === "milfa") {
            userState.stage = "answering-questions";
            await ctx.reply(
                "–ö–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ –≤–µ—Ä–Ω–æ–µ!\n" +
                "–¢–µ–ø–µ—Ä—å —Ç–µ–±–µ –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤üôÉ:\n\n" + 
                "–ü–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å:"
            );
            const firstQuestion = day1Questions[userState.progress.currentQuestionIndex].question;
            await ctx.reply(firstQuestion);
        } else {
            await ctx.reply("–ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞.");
        }
        return;
    }

    if (userState.stage === "answering-questions") {
        const currentQuestionIndex = userState.progress.currentQuestionIndex;
        const currentQuestion = day1Questions[currentQuestionIndex];

        if (userAnswer === currentQuestion.answer) {
            userState.progress.currentQuestionIndex += 1;

            if (userState.progress.currentQuestionIndex < day1Questions.length) {
                const nextQuestion = day1Questions[userState.progress.currentQuestionIndex].question;
                await ctx.reply(`–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n${nextQuestion}`);
            } else {
                userState.stage = null;
                userState.completed = true;
                await ctx.reply("–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∞ –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è –Ω–∞ —ç—Ç–æ—Ç –¥–µ–Ω—å!\n" +
                    "–°–µ–≥–æ–¥–Ω—è –±—ã–ª–∏ –æ—á–µ–Ω—å –ª–µ–≥–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è, —á—Ç–æ–±—ã –≤—Ç—è–Ω—É—Ç—å —Ç–µ–±—è –≤ –∏–≥—Ä—É, –Ω–µ —Ä–∞—Å—Å–ª–∞–±–ª—è–π—Å—è, –¥–∞–ª—å—à–µ –±–æ–ª—å—à–µüôÇ\n\n" +
                    "–î–æ–∂–¥–∏—Å—å –∑–∞–≤—Ç—Ä–∞ –∏ –æ—Ç–∫—Ä—ã–≤–∞–π —Å–ª–µ–¥—É—é—â–∏–π –±–ª–æ–∫ —Å –∑–∞–¥–∞–Ω–∏—è–º–∏...");
            }
        } else {
            await ctx.reply("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞.");
        }
    }
};

// === –ú–æ–¥—É–ª—å –î–Ω—è 2 ===
const emojiSongs = [
    { emoji: "üü©üëÄüöñ", answer: "–∑–µ–ª–µ–Ω–æ–≥–ª–∞–∑–æ–µ —Ç–∞–∫—Å–∏"},
    { emoji: "üòÆ‚Äçüí®üò§üéÆüë©‚Äç‚ù§Ô∏è‚Äçüë®", answer: "–≤–¥–æ—Ö-–≤—ã–¥–æ—Ö" },
    { emoji: "üëâüôé‚Äç‚ôÇÔ∏èü•¥üçæüôã‚Äç‚ôÄÔ∏èüë∏", answer: "—Ü–∞—Ä–∏—Ü–∞"},
    { emoji: "‚¨áÔ∏èüôã‚Äç‚ôÇÔ∏è‚ìÇÔ∏è5Ô∏è‚É£üõ£Ô∏è8Ô∏è‚É£", answer: "–∞—Å—Ñ–∞–ª—å—Ç 8"},
    { emoji: "üë´üöÜü´Çüì≠ü´ôüöâ", answer: "–ø–æ–µ–∑–¥–∞"},
    { emoji: "üôÖ‚Äç‚ôÄÔ∏èüó£Ô∏èüôÖ‚Äç‚ôÄÔ∏èüò±üö¢ ", answer: "–Ω–∞ —Ç–∏—Ç–∞–Ω–∏–∫–µ"},
    { emoji: "üôã‚Äç‚ôÄÔ∏è‚ùÑÔ∏è‚û°Ô∏è‚ù§Ô∏è", answer: "–∑–∏–º–∞ –≤ —Å–µ—Ä–¥—Ü–µ"},
    { emoji: "üëµüåé‚ö™Ô∏èüå≥", answer: "–º–∞—Ç—É—à–∫–∞ –∑–µ–º–ª—è"}, 
    { emoji: "üåπüåπüåπü™üüëÄü´µ", answer: "–º–∏–ª–ª–∏–æ–Ω –∞–ª—ã—Ö —Ä–æ–∑"},
    { emoji: "üôã‚Äç‚ôÇÔ∏èüá∑üá∫", answer: "—è —Ä—É—Å—Å–∫–∏–π"},
];

const handleDay2 = async (ctx) => {
    const userId = ctx.from.id;

    if (!userStates[userId]) {
        userStates[userId] = { day: 1, stage: null, progress: {}, completed: false };
    }

    const userState = userStates[userId];

    if (!userState.completed) {
        await ctx.reply("–°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏ –î–µ–Ω—å 1.");
        return;
    }

    if (userState.day < 2) {
        userState.day = 2;
        userState.stage = null;
        userState.progress = { currentIndex: 0 };
    }

    const userAnswer = ctx.message.text.trim().toLowerCase();

    if (userState.stage === null) {
        userState.stage = "emoji-game";
        userState.progress.currentIndex = 0;
        const firstSong = emojiSongs[0];
        await ctx.reply(`–û—á–µ–Ω—å –Ω–∞–¥–µ—é—Å—å, —á—Ç–æ —Å–µ–≥–æ–¥–Ω—è 17 —á–∏—Å–ª–æüôÉ\n–ï—Å–ª–∏ –¥–∞, —Ç–æ —Å—É–ø–µ—Ä! –î–∞–≤–∞–π –ø–æ–∏–≥—Ä–∞–µ–º?\n\n–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –∏ –¥–∞–ª—å—à–µ –∑–∞–¥–∞–Ω–∏—è —Ç—ã –¥–æ–ª–∂–Ω–∞ —É–≥–∞–¥–∞—Ç—å –≤—Å–µ –ø–µ—Å–Ω–∏)\n–í–≤–æ–¥–∏ –∫–æ—Ä–µ–∫—Ç–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –ø–µ—Å–µ–Ω!(–Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ)\n–ü–æ–µ—Ö–∞–ª–∏!\n\n–£–≥–∞–¥–∞–π –ø–µ—Å–Ω—é:\n${firstSong.emoji}`);
        return;
    }

    if (userState.stage === "emoji-game") {
        const currentSong = emojiSongs[userState.progress.currentIndex];

        if (userAnswer === currentSong.answer) {
            userState.progress.currentIndex += 1;

            if (userState.progress.currentIndex < emojiSongs.length) {
                const nextSong = emojiSongs[userState.progress.currentIndex].emoji;
                await ctx.reply(`–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –°–ª–µ–¥—É—é—â–∞—è –ø–µ—Å–Ω—è:\n${nextSong}`);
            } else {
                userState.stage = "awaiting-name";
                await ctx.reply(
                    '–£ —Ç–µ–±—è –µ—Å—Ç—å –∑–∞–±–∞–≤–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è, –∫–æ—Ç–æ—Ä–∞—è —Å–≤—è–∑—ã–≤–∞–µ—Ç —ç—Ç—É –ø–µ—Å–Ω—é —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º —á–µ–ª–æ–≤–µ–∫–æ–ºüôÇ\n\n' +
                    '–¢—ã –ø–æ–Ω—è–ª–∞ –ø—Ä–æ –∫–æ–≥–æ —è?\n\n' +
                    '–ù–∞–ø–∏—à–∏ –∏–º—è —Ç–æ–≥–æ, –ø—Ä–æ –∫–æ–≥–æ —è –≥–æ–≤–æ—Ä—é...'
                );
            }
        } else {
            await ctx.reply("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞.");
        }
        return;
    }

    if (userState.stage === "awaiting-name") {
        if (userAnswer === "–µ–≥–æ—Ä") {
            userState.stage = "awaiting-code";
            await ctx.reply(
                "–í—Å–µ –≤–µ—Ä–Ω–æ, —è –≥–æ–≤–æ—Ä–∏–ª –ø—Ä–æ –ï–≥–æ—Ä–∞, –≥–æ—Ç–æ–≤—å—Å—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∞–∫—Ç–∏–≤–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ)\n\n" +
                "–ê–∫—Ç–∏–≤–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ:\n\n" +
                "–ù–∞–π–¥–∏ —Å–µ–≥–æ–¥–Ω—è –ï–≥–æ—Ä–∞ –∏ –Ω–∞–ø–∏—à–∏ –º–Ω–µ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ:"
            );
        } else {
            await ctx.reply("–ù–µ—Ç, —ç—Ç–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç. –ü–æ–¥—É–º–∞–π –µ—â—ë.");
        }
        return;
    }

    if (userState.stage === "awaiting-code") {
        if (userAnswer === "–∞–ª—è—Å–∫–∞") {
            userState.stage = null;
            userState.completed = true;
            await ctx.reply("–ü–æ–∑–¥—Ä–∞–≤–ª—è—é!ü•≥ –¢—ã –∑–∞–≤–µ—Ä—à–∏–ª–∞ –∑–∞–¥–∞–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è, –¥–∞–ª—å—à–µ —Ç–æ–ª—å–∫–æ —Å–ª–æ–∂–Ω–µ–µüòâ\n\n" +
                "–ñ–¥–∏ –∑–∞–≤—Ç—Ä–∞ –∏ –æ—Ç–∫—Ä—ã–≤–∞–π –Ω–æ–≤—ã–π –±–ª–æ–∫ –∑–∞–¥–∞–Ω–∏–π)"
            );
        } else {
            await ctx.reply("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞.");
        }
    }
};

// === –ú–æ–¥—É–ª—å –î–Ω—è 3 ===
const secretWord = "–ø—Ä–∏–Ω—Ü";

const handleDay3 = async (ctx) => {
    const userId = ctx.from.id;

    if (!userStates[userId]) {
        userStates[userId] = { day: 1, stage: null, progress: {}, completed: false };
    }

    const userState = userStates[userId];

    if (!userState.completed) {
        await ctx.reply("–°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏ –î–µ–Ω—å 2.");
        return;
    }

    if (userState.day < 3) {
        userState.day = 3;
        userState.stage = null;
        userState.progress = { attempts: 0 };
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–µ–∫—Å—Ç –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
    const userAnswer = ctx.message.text ? ctx.message.text.trim().toLowerCase() : null;

    if (userState.stage === null) {
        userState.stage = "guessing-word";
        await ctx.reply(
            "–ù–æ–≤—ã–π –¥–µ–Ω—å - –Ω–æ–≤—ã–µ –∑–∞–¥–∞–Ω–∏—è!üéâ\n" +
            "–ü–æ–∏–≥—Ä–∞–µ–º –≤ –æ—á–µ–Ω—å –∑–Ω–∞–∫–æ–º—É—é –∏–≥—Ä—É –£–ì–ê–î–ê–ô –°–õ–û–í–û –ò–ó 5 –ë–£–ö–í)\n\n" +
            "–ó–∞–≥–∞–¥—ã–≤–∞—é —Å–ª–æ–≤–æ –∏–∑ 5 –±—É–∫–≤. –ü–æ–ø—Ä–æ–±—É–π –æ—Ç–≥–∞–¥–∞—Ç—å!"
        );
        return;
    }

    if (userState.stage === "guessing-word") {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–µ–∫—Å—Ç –∏ —Ä–∞–≤–µ–Ω –ª–∏ –æ–Ω 5 —Å–∏–º–≤–æ–ª–∞–º
        if (!userAnswer || userAnswer.length !== 5) {
            await ctx.reply("–°–ª–æ–≤–æ –¥–æ–ª–∂–Ω–æ —Å–æ—Å—Ç–æ—è—Ç—å —Ä–æ–≤–Ω–æ –∏–∑ 5 –±—É–∫–≤.");
            return;
        }

        userState.progress.attempts += 1;

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
        let feedback = "";
        let guessedCorrectly = true;

        for (let i = 0; i < 5; i++) {
            const userChar = userAnswer[i];
            const secretChar = secretWord[i];

            if (userChar === secretChar) {
                feedback += `–ë—É–∫–≤–∞ ${userChar.toUpperCase()} –Ω–∞ —Å–≤–æ–µ–º –º–µ—Å—Ç–µ. `;
            } else if (secretWord.includes(userChar)) {
                feedback += `–ë—É–∫–≤–∞ ${userChar.toUpperCase()} –µ—Å—Ç—å –≤ —Å–ª–æ–≤–µ, –Ω–æ –Ω–µ –Ω–∞ —Å–≤–æ–µ–º –º–µ—Å—Ç–µ. `;
                guessedCorrectly = false;
            } else {
                guessedCorrectly = false;
            }
        }

        if (guessedCorrectly) {
            userState.stage = "active-task";
            await ctx.reply(`–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã —É–≥–∞–¥–∞–ª —Å–ª–æ–≤–æ ${secretWord.toUpperCase()} –∑–∞ ${userState.progress.attempts} –ø–æ–ø—ã—Ç–æ–∫!`);
            await ctx.reply(
                "–¢–µ–ø–µ—Ä—å –∞–∫—Ç–∏–≤–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ:\n–í—ã–π–¥–∏ –Ω–∞ —É–ª–∏—Ü—É –∏ —Å—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É–π –∫—Ä–∞—Å–Ω—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å. –û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ —Å—é–¥–∞, —á—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å –î–µ–Ω—å 3!"
            );
        } else {
            await ctx.reply(feedback || "–í—Å–µ –º–∏–º–æüò°");
        }
        return;
    }

    if (userState.stage === "active-task") {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–ø—Ä–∞–≤–∏–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ñ–æ—Ç–æ
        if (ctx.message.photo) {
            userState.stage = null;
            userState.completed = true;
            await ctx.reply("–û—Ç–ª–∏—á–Ω–æ!ü§©ü§©ü§©\n\n–¢—ã —Å–ø—Ä–∞–≤–∏–ª–∞—Å—å —Å –∞–∫—Ç–∏–≤–Ω—ã–º –∑–∞–¥–∞–Ω–∏–µ–º!\n\n–ù–∞ —Å–µ–≥–æ–¥–Ω—è –≤—Å–µüòî\n–ñ–¥–∏ –Ω–æ–≤—ã—Ö –∑–∞–¥–∞–Ω–∏–π –∑–∞–≤—Ç—Ä–∞!");
        } else {
            await ctx.reply("–≠—Ç–æ –Ω–µ —Ñ–æ—Ç–æ!üò° –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∫—Ä–∞—Å–Ω–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è.");
        }
    }
};

//==–î–µ–Ω—å 4==
const day4Questions = [
    { question: "–ó–∞—á–µ–º –≤–æ–¥–∞ –≤ —Å—Ç–∞–∫–∞–Ω–µ?", answer: "–∑–∞ —Å—Ç–µ–∫–ª–æ–º" },
    { question: "–ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –Ω–∞—à–∞ –ø–ª–∞–Ω–µ—Ç–∞?", answer: "–∑–µ–º–ª—è" },
];

const day4EmojiSongs = [
    { emoji: "üïñ7Ô∏è‚É£üí∫‚úàÔ∏èü§îüßë‚Äç‚úàÔ∏è", answer: "–ø—Ä–æ–≤–∞–Ω—Å" },
    { emoji: "ü´µüëÑüí¶üôÖ‚Äç‚ôÄÔ∏è", answer: "–≤–æ–¥–∏—Ü–∞" },
];

const day4Words = ["–æ—Ç—Ä—è–¥", "–ª–∞–≤–∫–∞"]; // –ó–∞–≥–∞–¥–∞–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –∏–≥—Ä—ã –∏–∑ 5 –±—É–∫–≤

// –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ç–æ—Ä—Ç–∞, –ø–æ–¥—Å–∫–∞–∑–∫–∏ –∏ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ
const cakeLocation = {
    coordinates: "–í 22:30 –ö–∞—Ç—è –±—É–¥–µ—Ç –∂–¥–∞—Ç—å —Ç–µ–±—è –≤ –≥–æ—Å—Ç–∏)\n–ü—Ä–∏—Ö–æ–¥–∏ –∫ –ö–∞—Ç–µ –∫ –Ω—É–∂–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–∏, –∞ —è –Ω–∞–ø–∏—à—É —á—Ç–æ —Ç–µ–±—è –ø—Ä–∏–º–µ—Ä–Ω–æ –∂–¥–µ—Ç...",
    hints: [
        "–û—Å—Ç–∞–ª–æ—Å—å —Ç–æ–ª—å–∫–æ –Ω–∞–π—Ç–∏ —Ç–æ—Ä—Ç, –∞ –ö–∞—Ç—è –∑–Ω–∞–µ—Ç –∫–∞–∫ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å, —Å–ª—É—à–∞–π –ö–∞—Ç—é –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏ –ø—Ä–æ–π–¥–µ—à—å –∫–≤–µ—Å—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é)",
        "–ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –Ω–∞–π–¥–µ—à—å —Ç–æ—Ä—Ç, –≤–µ—Ä–Ω–∏—Å—å –∫ –ö–∞—Ç–µ, —á—Ç–æ–±—ã –æ–Ω–∞ –¥–∞–ª–∞ —Ç–µ–±–µ –≤—Ç–æ—Ä—É—é —á–∞—Å—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫–∏...",
    ], 
};

const handleDay4 = async (ctx) => {
    const userId = ctx.from.id;

    if (!userStates[userId]) {
        userStates[userId] = { day: 1, stage: null, progress: {}, completed: false };
    }

    const userState = userStates[userId];

    if (!userState.completed) {
        await ctx.reply("–°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏ –î–µ–Ω—å 3.");
        return;
    }

    if (userState.day < 4) {
        userState.day = 4;
        userState.stage = "intro";
        userState.progress = { currentQuestionIndex: 0, currentSongIndex: 0, currentWordIndex: 0, attempts: 0, step: "questions" };
    }

    const userAnswer = ctx.message.text?.trim().toLowerCase();

    if (userState.stage === "intro") {
        await ctx.reply(
            "–ú–æ–ª–æ–¥–µ—Ü! –¢—ã —Å–ø—Ä–∞–≤–∏–ª–∞—Å—å —Å–æ –≤—Å–µ–º–∏ –º–æ–∏–º–∏ –∏—Å–ø—ã—Ç–∞–Ω–∏—è–º–∏, –æ—Å—Ç–∞–ª–æ—Å—å –æ–¥–Ω–æ –º–∞–ª–µ–Ω—å–∫–æ–µ –∏ –≤—Å–µ. –ù–æ —Å–µ–≥–æ–¥–Ω—è –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–µ–Ω—å –∑–∞–¥–∞–Ω–∏–π! –ó–∞–≤—Ç—Ä–∞ —É —Ç–µ–±—è —É–∂–µ –¥–æ–ª–≥–æ–∂–¥–∞–Ω–Ω—ã–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è, –∏ —Ç–∞–º —Ç–µ–±–µ –±—É–¥–µ—Ç –Ω–µ –¥–æ –±–æ—Ç–∞. –ü–æ—ç—Ç–æ–º—É —Å–µ–≥–æ–¥–Ω—è —è —Ç–µ–±—è –Ω–µ –±—É–¥—É —Å–∏–ª—å–Ω–æ –º—É—á–∞—Ç—å. –î–∞–≤–∞–π –≤—Å–ø–æ–º–Ω–∏–º –≤—Å–µ, —á—Ç–æ –º—ã –¥–µ–ª–∞–ª–∏:\n\n" +
            "1) –¢—ã –æ—Ç–≤–µ—á–∞–ª–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∏ —Ö–æ–¥–∏–ª–∞ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É.\n" +
            "2) –¢—ã –æ—Ç–≥–∞–¥—ã–≤–∞–ª–∞ –ø–µ—Å–Ω—é –ø–æ —ç–º–æ–¥–∑–∏ –∏ –∏—Å–∫–∞–ª–∞ –ï–≥–æ—Ä–∞.\n" +
            "3) –ò–≥—Ä–∞–ª–∞ –≤ —Å–≤–æ—é –ª—é–±–∏–º—É—é –∏–≥—Ä—É –∏–∑ 5 –±—É–∫–≤ –∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä–æ–≤–∞–ª–∞ –¥–ª—è –º–µ–Ω—è –∫—Ä–∞—Å–Ω—É—é –º–∞—à–∏–Ω—É.\n\n" +
            "–ù–æ —è –ø—Ä—è–º —á—É–≤—Å—Ç–≤—É—é, —á—Ç–æ —á–µ–≥–æ-—Ç–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç! –î–∞–≤–∞–π –≤—ã—è—Å–Ω–∏–º —á–µ–≥–æ –∏–º–µ–Ω–Ω–æ. –ö–∞–∫? –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ - –º–∞—Ç—å —É—á–µ–Ω–∏—è."
        );
        userState.stage = "questions";
        await ctx.reply(`–í–æ–ø—Ä–æ—Å 1: ${day4Questions[0].question}`);
        return;
    }

    if (userState.stage === "questions") {
        const currentIndex = userState.progress.currentQuestionIndex;
        const currentQuestion = day4Questions[currentIndex];

        if (userAnswer === currentQuestion.answer) {
            userState.progress.currentQuestionIndex += 1;

            if (userState.progress.currentQuestionIndex < day4Questions.length) {
                const nextQuestion = day4Questions[userState.progress.currentQuestionIndex].question;
                await ctx.reply(`–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n${nextQuestion}`);
            } else {
                userState.stage = "emoji-songs";
                await ctx.reply(`–ú–æ–ª–æ–¥–µ—Ü! –¢–µ–ø–µ—Ä—å —É–≥–∞–¥–∞–π –ø–µ—Å–Ω—é –ø–æ —ç–º–æ–¥–∑–∏:\n${day4EmojiSongs[0].emoji}`);
            }
        } else {
            await ctx.reply("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞.");
        }
        return;
    }

    if (userState.stage === "emoji-songs") {
        const currentIndex = userState.progress.currentSongIndex;
        const currentSong = day4EmojiSongs[currentIndex];

        if (userAnswer === currentSong.answer) {
            userState.progress.currentSongIndex += 1;

            if (userState.progress.currentSongIndex < day4EmojiSongs.length) {
                const nextSong = day4EmojiSongs[userState.progress.currentSongIndex].emoji;
                await ctx.reply(`–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –°–ª–µ–¥—É—é—â–∞—è –ø–µ—Å–Ω—è:\n${nextSong}`);
            } else {
                userState.stage = "word-game";
                await ctx.reply("–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å —É–≥–∞–¥–∞–π —Å–ª–æ–≤–æ –∏–∑ 5 –±—É–∫–≤. –ù–∞–ø–∏—à–∏ —Å–ª–æ–≤–æ –∏–∑ 5 –±—É–∫–≤:");
            }
        } else {
            await ctx.reply("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞.");
        }
        return;
    }

    if (userState.stage === "word-game") {
        const currentIndex = userState.progress.currentWordIndex;
        const secretWord = day4Words[currentIndex];

        if (!userAnswer || userAnswer.length !== 5) {
            await ctx.reply("–°–ª–æ–≤–æ –¥–æ–ª–∂–Ω–æ —Å–æ—Å—Ç–æ—è—Ç—å —Ä–æ–≤–Ω–æ –∏–∑ 5 –±—É–∫–≤.");
            return;
        }

        userState.progress.attempts += 1;
        let feedback = "";
        let guessedCorrectly = true;

        for (let i = 0; i < 5; i++) {
            const userChar = userAnswer[i];
            const secretChar = secretWord[i];

            if (userChar === secretChar) {
                feedback += `–ë—É–∫–≤–∞ ${userChar.toUpperCase()} –Ω–∞ —Å–≤–æ—ë–º –º–µ—Å—Ç–µ. `;
            } else if (secretWord.includes(userChar)) {
                feedback += `–ë—É–∫–≤–∞ ${userChar.toUpperCase()} –µ—Å—Ç—å –≤ —Å–ª–æ–≤–µ, –Ω–æ –Ω–µ –Ω–∞ —Å–≤–æ—ë–º –º–µ—Å—Ç–µ. `;
                guessedCorrectly = false;
            } else {
                guessedCorrectly = false;
            }
        }

        if (guessedCorrectly) {
            userState.progress.currentWordIndex += 1;

            if (userState.progress.currentWordIndex < day4Words.length) {
                await ctx.reply(`–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –°–ª–µ–¥—É—é—â–µ–µ —Å–ª–æ–≤–æ. –ù–∞–ø–∏—à–∏ —Å–ª–æ–≤–æ –∏–∑ 5 –±—É–∫–≤:`);
            } else {
                userState.stage = "cake-hunt";
                await ctx.reply(
                    "–û—Ç–ª–∏—á–Ω–æ, —Ç—ã —Å–æ–≤—Å–µ–º —Å–ø—Ä–∞–≤–∏–ª–∞—Å—å! –Ø –¥—É–º–∞—é, —á—Ç–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç, –∫–æ–Ω–µ—á–Ω–æ –∂–µ, —Ç–æ—Ä—Ç–∞! –ö–∞–∫–æ–µ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –±–µ–∑ —Ç–æ—Ä—Ç–∞?! –î–∞–≤–∞–π –ø–æ–∏–≥—Ä–∞–µ–º –≤ –∏–≥—Ä—É ¬´–ù–∞–π–¥–∏ —Ç–æ—Ä—Ç¬ª. –Ø —Ç–µ–±–µ —Å–∫–∞–∂—É, —á—Ç–æ –¥–µ–ª–∞—Ç—å, —á—Ç–æ–±—ã –µ–≥–æ –Ω–∞–π—Ç–∏!"
                );
                await ctx.reply(
                    `–ó–∞–¥–∞–Ω–∏–µ: ${cakeLocation.coordinates}\n\n–ü–æ–¥—Å–∫–∞–∑–∫–∏:\n1. ${cakeLocation.hints[0]}\n2. ${cakeLocation.hints[1]}`
                );
                await ctx.reply("–ö–æ–≥–¥–∞ –Ω–∞–π–¥—ë—à—å —Ç–æ—Ä—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—è –∫ –ö–∞—Ç–µ –∑–∞ –≤—Ç–æ—Ä–æ–π –ø–æ–ª–æ–≤–∏–Ω–∫–æ–π –ø–æ–¥—Å–∫–∞–∑–∫–∏ –∏ –ø–æ—Ç–æ–º —É–∂–µ –∂–¥–∏ —Å—é—Ä–ø—Ä–∏–∑ —É —Å–µ–±—è –¥–æ–º–∞.");
                userState.stage = "enter-code-word";
            }
        } else {
            await ctx.reply(feedback || "–ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞.");
        }
        return;
    }

    if (userState.stage === "enter-code-word") {
        if (userAnswer === cakeLocation.codeWord) {
            userState.stage = null;
            userState.completed = true;
            await ctx.reply(
                "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã –ø—Ä–æ—à–ª–∞ –≤—Å–µ –º–æ–∏ –∑–∞–¥–∞–Ω–∏—è –∏ –Ω–∞—à–ª–∞ —Ç–æ—Ä—Ç! –¢–µ–ø–µ—Ä—å –Ω–∞—Å–ª–∞–∂–¥–∞–π—Å—è —Å–≤–æ–∏–º –¥–Ω—ë–º —Ä–æ–∂–¥–µ–Ω–∏—è. –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –∏–≥—Ä–∞–ª–∞ —Å–æ –º–Ω–æ–π! üéâüéÇ"
            );
        } else {
            await ctx.reply("–≠—Ç–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞.");
        }
    }
};

//–°–¢–ê–†–¢
// –ö–æ–º–∞–Ω–¥–∞ /start
bot.command("start", async (ctx) => {
    const userId = ctx.from.id;
    userStates[userId] = { day: 1, stage: null, progress: {}, completed: false };

    await ctx.reply(
        '–ü—Ä–∏–≤–µ—Ç, –±—É–¥—É—â–∞—è –∏–º–µ–Ω–∏–Ω–Ω–∏—Ü–∞! üëã\n\n' + 
        '–î–æ–∂–¥–∞–ª–∞—Å—å? –í–æ—Ç —Ç–µ–±–µ –∏ —Å—é—Ä–ø—Ä–∏–∑, –ø—Ä–∞–≤–¥–∞ —É–∂–µ –Ω–µ —Ç–∞–∫–æ–π —É–∂ —ç—Ç–æ –∏ —Å—é—Ä–ø—Ä–∏–∑ , –Ω–æ –≤—Å–µ –∂–µ –∫–∞–∫–æ–π –µ—Å—Ç—å) ü•≤üéâ\n\n' + 
        '–î–∞–≤–∞–π –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, –Ø - –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–¥—É–º–∞–ª —Ç–µ–±–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –¥–æ–ª–∂–Ω–∞ –ø—Ä–æ–π—Ç–∏, –∑–∞–¥–∞–Ω–∏—è –±—É–¥—É—Ç –¥–µ–ª–∏—Ç—å—Å—è –Ω–∞ –¥–Ω–∏ (—É –º–µ–Ω—è –Ω–µ –±—ã–ª–æ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ç—å –≤—Å–µ, –ø–æ—ç—Ç–æ–º—É –ø–æ–º–æ–≥–∞–π), –Ω–æ –¥–µ–ª–∏—Ç—å—Å—è –æ–Ω–∏ –±—É–¥—É—Ç —É—Å–ª–æ–≤–Ω–æ, –æ–∫–æ–ª–æ —Ç–≤–æ–µ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞ ¬´menu¬ª –≤ –∫–æ—Ç–æ—Ä–æ–π –∏ –∑–∞–ø—Ä—è—Ç–∞–Ω—ã –∑–∞–¥–∞–Ω–∏—è –Ω–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å. –î–∞–≤–∞–π –¥–æ–≥–æ–≤–æ—Ä–∏–º—Å—è, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–∏–≤ –∑–∞–¥–∞–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è, —Ç—ã –Ω–µ –±—É–¥–µ—à—å –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞, —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ –Ω–∞—Å—Ç—É–ø–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å, —Ç—ã –Ω–∞–∂–º–µ—à—å –Ω–∞ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ üôè!\n\n' +
        '–ò—Ç–∞–∫, –º—ã –Ω–µ–º–Ω–æ–≥–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å, —Ç–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –Ω–∞—á–Ω–µ–º –±–æ–ª–µ–µ —Ç–µ—Å–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ, –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º –∫–∞–∫ –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –æ—Ç–∫—Ä—ã–≤–∞–π ¬´menu¬ª –∏ –≤—ã–±–∏—Ä–∞–π –ò–ù–°–¢–†–£–ö–¶–ò–Ø, –≥–¥–µ —Ç—ã —É–∑–Ω–∞–µ—à—å –ø—Ä–∞–≤–∏–ª–∞!'
    );
});

//–ò–ù–°–¢–†–£–ö–¶–ò–Ø
bot.command('help', async (ctx) => {
    await ctx.reply(
        '–ò–ù–°–¢–†–£–ö–¶–ò–Ø:\n\n' +
        '–ü—Ä–∞–≤–∏–ª–∞ –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç—ã–µ, –≤—ã–ø–æ–ª–Ω—è–µ—à—å –∑–∞–¥–∞–Ω–∏–µ - –ø–µ—Ä–µ—Ö–æ–¥–∏—à—å –∫ —Å–ª–µ–¥—É—é—â–µ–º—É. –ö–∞–∫ —è —É–∂–µ –∏ –≥–æ–≤–æ—Ä–∏–ª, –≤—ã–ø–æ–ª–Ω—è—Ç—å –∑–∞–¥–∞–Ω–∏—è –Ω—É–∂–Ω–æ —Å—Ç—Ä–æ–≥–æ –≤ –Ω—É–∂–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –≤ –Ω—É–∂–Ω—É—é –¥–∞—Ç—É\n–ó–∞–¥–∞–Ω–∏—è –≤—Å–µ –ª–µ–≥–∫–∏–µ –∏ –¥–µ–ª—è—Ç—Å—è –Ω–∞ –¥–≤–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:\n1) –∞–∫—Ç–∏–≤–Ω—ã–µ 2) –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ\n\n' +
        '–í—Å–µ –ø—Ä–æ—Å—Ç–æ, –ø—Ä–∞–≤–¥–∞ –∂–µ?üòä\n\n'+
        '–ò—Ç–∞–∫ –Ω–µ–±–æ–ª—å—à–æ–π –∏–Ω—Å—Ç—Ä—É–∫—Ç–∞–∂:\n' +
        '–ö–Ω–æ–ø–∫–∞ –°–¢–ê–†–¢ - –∑–∞–ø—É—Å–∫–∞–µ—Ç –º–µ–Ω—è –∏ –Ω–∞—á–∏–Ω–∞–µ—Ç –≤–µ—Å—å –Ω–∞—à –¥–∏–∞–ª–æ–≥ —Å–Ω–∞—á–∞–ª–∞\n\n' +
        '–ö–Ω–æ–ø–∫–∞ –ò–ù–°–¢–†–£–ö–¶–ò–Ø - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–±–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é , —Ç–æ –µ—Å—Ç—å –¥–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n' +
        '–ö–Ω–æ–ø–∫–∞ –ó–∞–¥–∞–Ω–∏—è 16.12 - –¥–∞–µ—Ç —Ç–µ–±–µ –∑–∞–¥–∞–Ω–∏—è –Ω–∞ –¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ\n–° –ø–æ—Å–ª–µ–¥—É—é—â–∏–º–∏ –¥–∞—Ç–∞–º–∏ –≤—Å–µ –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ, –Ω–∞–∂–∏–º–∞–µ—à—å –∫–Ω–æ–ø–∫—É - –ø–æ–ª—É—á–∞–µ—à—å –∑–∞–¥–∞–Ω–∏–µ\n\n' +
        '–ù–æ –Ω–µ –≤—Å–µ —Ç–∞–∫ –ø—Ä–æ—Å—Ç–æ , –∏–Ω–æ–≥–¥–∞ , —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å , –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∞–∫—Ç–∏–≤–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ, –ø–æ–∫–∞ —Ç—ã –µ–≥–æ –≤—ã–ø–æ–ª–Ω—è–µ—à—å –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–¥–æ –º–Ω–µ –ø–∏—Å–∞—Ç—å, –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–∏—à—å - –ø–∏—à–∏.\n\n' +
        '–ù—É —á—Ç–æ, —Å–∫–æ—Ä–æ —Ç–≤–æ–π –ª—é–±–∏–º—ã–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏–µ! –î–∞–≤–∞–π –Ω–µ–º–Ω–æ–≥–æ —Å–¥–µ–ª–∞–µ–º –µ–≥–æ –Ω–µ —Ç–∞–∫–∏–º –∫–∞–∫ –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ)ü•≥ü•≥ü•≥\n\n' +
        '–ñ–µ–ª–∞—é —Ç–µ–±–µ —É–¥–∞—á–∏, –Ω–∞–∂–∏–º–∞–π –Ω–∞ –Ω—É–∂–Ω—É—é –¥–∞—Ç—É –∏ –ª–µ—Ç—Å –≥–æ—É!üçÄ\n\n' +
        'P.S: –ù–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É 16.12 —Å–æ–≤–µ—Ç—É—é –Ω–æ—á—å—é, –ø–æ—Ç–æ–º—É —á—Ç–æ –∑–∞–¥–∞–Ω–∏–µ —Ç–∞–º —É—Ç—Ä–µ–Ω–Ω–µ–µ)'
    );
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –î–Ω—è 1
bot.command("day1", async (ctx) => {
    userStates[ctx.from.id].day = 1;
    await handleDay1(ctx);

    await bot.api.getUpdates
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –î–Ω—è 2
bot.command("day2", async (ctx) => {
    await handleDay2(ctx);
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –î–Ω—è 3
bot.command("day3", async (ctx) => {
    await handleDay3(ctx);
});
// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –î–Ω—è 4
bot.command("day4", async (ctx) => {
    await handleDay4(ctx);
});

bot.on("message:voice", async (ctx) => {
    const fileId = ctx.message.voice.file_id;
    console.log('–ü–æ–ª—É—á–µ–Ω File_id –≥—Å:', fileId);
    await ctx.reply(`File ID: ${fileId}`);
})

const secretVoiceFileId = "AwACAgIAAxkBAAIKhWdYh0TkS7kUw48K_onFMULQN0NCAAL1awAC8WbJShYFg4x11QABnzYE"; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π file_id –≤–∞—à–µ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è

bot.command("secret", async (ctx) => {
    try {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await ctx.reply("–•–ª—é—é—é–øüß∏...");

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await ctx.replyWithVoice(secretVoiceFileId);
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /secret:", error);
        await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞.");
    }
});


bot.on("message:text", async (ctx) => {
    const userId = ctx.from.id;
    const userState = userStates[userId];

    if (userState?.day === 1) {
        await handleDay1(ctx);
    } else if (userState?.day === 2) {
        await handleDay2(ctx);
    } else if (userState?.day === 3) {
        await handleDay3(ctx);
    } else if (userState?.day === 4 && userState?.stage) {
        await handleDay4(ctx);
    } else {
        await ctx.reply("–Ø –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞—é, —á—Ç–æ —Å —ç—Ç–∏–º –¥–µ–ª–∞—Ç—å. –ü–æ–ø—Ä–æ–±—É–π –≤—ã–±—Ä–∞—Ç—å –¥–µ–Ω—å –∏–∑ –º–µ–Ω—é.");
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on("message", async (ctx) => {
    const userId = ctx.from.id;
    const userState = userStates[userId];

    if (userState?.day === 3 && userState?.stage === "active-task") {
        // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ —ç—Ç–∞–ø–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è
        if (ctx.message.photo) {
            await handleDay3(ctx); // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–æ—Ç–æ
        } else {
            await ctx.reply("–≠—Ç–æ –Ω–µ —Ñ–æ—Ç–æ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∫—Ä–∞—Å–Ω–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è.");
        }
    } else if (userState?.day === 3) {
        await handleDay3(ctx); // –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —ç—Ç–∞–ø—ã –î–Ω—è 3
    }
});

// === –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ ===
bot.catch((err) => {
    const ctx = err.ctx;
    console.error("Error while handling update " + ctx.update.update_id);
    const e = err.error;

    if (e instanceof GrammyError) {
        console.error("Error in request:", e.description);
    } else if (e instanceof HttpError) {
        console.error("Could not contact Telegram:", e);
    } else {
        console.error("Unknown error:", e);
    }
});

// === –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
bot.start();
